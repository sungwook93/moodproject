<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.board">

	<!-- 검색 조건 -->
	<sql id="searchMySQL">
		<if test="searchType != null">
			<if test="searchType == 's'.toString()">
				AND qna_subject LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				AND qna_content LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'u'.toString()">
				AND userID LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</if>
	</sql>
		
	<!-- 게시글 목록 가져오기 -->
	<select id="boardList" parameterType="com.edu.common.util.SearchCriteria" resultType="com.edu.board.dto.BoardDTO">
		<![CDATA[
			SELECT *
			FROM (
			SELECT qna_bno, qna_subject, qna_content, userID, qna_regDate, qna_readCount, reply_count, ROW_NUMBER() OVER(ORDER BY qna_bno DESC) AS rNUM
			FROM t_board WHERE 1=1
			]]>
			<include refid="searchMySQL"/>
			<![CDATA[
			) brd
			WHERE rNUM BETWEEN (#{perPageNum} * #{page} - 8) and (#{perPageNum} * #{page})
			ORDER BY qna_bno DESC;
		]]>
	</select>
	
	<!-- 게시글 총 갯수 가져오기 -->
	<select id = "totalCount" parameterType = "com.edu.common.util.SearchCriteria" resultType="Integer">
			select count(*)
			from t_board where 1=1
			<include refid="searchMySQL"/>
	</select>
	
	<!-- 게시글 전체 리스트 가져오기 -->
	<select id = "totalList" resultType = "com.edu.board.dto.BoardDTO">
			select * from t_board order by qna_bno
			<include refid="searchMySQL"/>
	</select>
	
	<!-- 게시글 등록 처리하기 -->
	<select id = "boardRegister" parameterType = "com.edu.board.dto.BoardDTO">
		<![CDATA[
			insert into t_board(qna_bno, qna_subject, qna_content, userID, qna_regDate, qna_readCount)
			select ifnull(max(qna_bno), 0) +1, #{qna_subject}, #{qna_content}, #{userID}, now(), 0 from t_board;
		]]>
	</select>
	
	<!-- qna 해당 아이디 게시글 전체 리스트 가져오기 -->
	<select id="boardUserList" resultType="com.edu.board.dto.BoardDTO" parameterType="String">
		<![CDATA[
			SELECT * FROM t_board WHERE userID=#{userID} ORDER BY qna_bno DESC;
		]]>
	</select>
	
	<!-- 게시글 상세페이지 보여주기 -->
	<select id="detail"  parameterType="int" resultType="com.edu.board.dto.BoardDTO">
		<![CDATA[
		SELECT * FROM t_board WHERE qna_bno = #{qna_bno};
		]]>
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateReadCount" parameterType="int">
		<![CDATA[
		UPDATE t_board SET qna_readCount = qna_readCount + 1 WHERE qna_bno = #{qna_bno};
		]]>
	</update>
	
	<!-- 게시글 수정 -->
	<update id="update" parameterType = "com.edu.board.dto.BoardDTO">
		<![CDATA[
		update t_board set qna_subject = #{qna_subject}, qna_content = #{qna_content}, userID = #{userID} where qna_bno = #{qna_bno};
		]]>
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType = "int">
		<![CDATA[
		delete from t_board where qna_bno = #{qna_bno};	
		]]>
	</delete>
	
	<!-- 댓글 등록하기  -->
	<insert id = "commentRegister" parameterType = "com.edu.board.dto.CommentDTO">
		<![CDATA[
		insert into t_comment (reply_bno, qna_bno, userID, reply_content, reply_regDate)
		select ifnull(max(reply_bno),0) + 1, #{qna_bno}, #{userID}, #{reply_content}, now() from t_comment;
		]]>
	</insert>
	
	<!-- 댓글 삭제하기 -->
	<delete id = "replyDelete" parameterType = "int">
		<![CDATA[
			delete from t_comment where reply_bno = #{reply_bno};
		]]>
	</delete>
	
	<!-- 댓글 갯수 구하기 -->
	<select id = "commentCount" parameterType = "Integer" resultType = "Integer">
		<![CDATA[
			select count(*) from t_comment where qna_bno = #{qna_bno};
		]]>
	</select>
	
	<!-- 댓글 목록 기져오기 -->
	<select id ="commentList" parameterType="Integer" resultType = "com.edu.board.dto.CommentDTO">
		<![CDATA[
			select * from t_comment where qna_bno = #{qna_bno} ORDER BY reply_regDate DESC;
		]]>
	</select>
	
	<!-- 게시판 리스트 제목에 댓글 수 표시 -->
	<update id = "updateReplyCount" parameterType = "int">
		update t_board b
		set b.reply_count = (select count(reply_bno) from t_comment where qna_bno = #{qna_bno})
		where b.qna_bno = #{qna_bno}
	</update>
		
	<!-- 댓글 수정하기 -->
	<update id = "replyUpdate" parameterType = "com.edu.board.dto.CommentDTO">
		<![CDATA[
			update t_comment set reply_content = #{reply_content}, userID = #{userID} where qna_bno = #{qna_bno} and reply_bno =#{reply_bno};
		]]>
	</update>
	
	
</mapper>