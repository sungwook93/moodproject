<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.order">

	<!-- 장바구니 화면 보여주기 -->
	<select id="cartList" resultType="com.edu.order.dto.CartDTO">
		select product_code, userID, product_amount, product_price, product_size,
		product_color, product_type, product_name, cart_num
		from t_cart
		where userID = #{userID}
	</select>
	
	<!-- 장바구니에 추가하기 -->
	<insert id="addCart" parameterType="com.edu.order.dto.CartDTO">
		insert into t_cart(cart_num ,product_code, userID, product_amount, product_price, product_size,
		product_color, product_type, product_name)
		SELECT IFNULL(MAX(cart_num), 0) + 1, #{product_code}, #{userID}, #{product_amount}, #{product_price},
		#{product_size}, #{product_color}, #{product_type}, #{product_name}
		FROM t_cart
	</insert>
	
	<!-- 해당상품이 장바구니에 이미 들어있는지 확인한다. -->
	<select id="checkcart" parameterType="com.edu.order.dto.CartDTO" resultType="Integer">
		select count(*) from t_cart where product_code = #{product_code} and userID = #{userID}
	</select>
	
	<!-- 수량 수정하기 -->
	<update id="countUpdate" parameterType="com.edu.order.dto.CartDTO" >
		update t_cart
		set product_amount = #{product_amount}
		where product_code = #{product_code} and userID = #{userID}
	</update>
	
	<!-- 카트넘버에 해당하는 정보 가져오기 -->
	<select id="bills" parameterType="Integer" resultType="com.edu.order.dto.CartDTO">
		select cart_num, product_code, userID, product_amount, product_price, product_size,
		product_color, product_type, product_name
		from t_cart
		where cart_num = #{cart_num};
	</select>
	
	<delete id="cartdelete" parameterType="Integer">
		delete from t_cart
		where cart_num = #{cart_num};
	</delete>
	
	<!-- 해당 장바구니 번호의 장바구니 정보 보내주기 -->
	<select id="cartNumList" parameterType="Integer" resultType="com.edu.order.dto.CartDTO">
		<![CDATA[
		SELECT c.cart_num, c.userID, c.product_code, p.product_name, p.product_price, c.product_amount, c.product_size
		FROM t_product p , t_cart c
		WHERE p.product_code = c.product_code and c.cart_num = #{cartNum};
		]]>
	</select>
	
	
	<!-- 주문완료 영역 -->
	
	
	<!-- 가장 큰 주문완료번호 구하기 -->
	<select id="getMaxOrderNum" resultType="Long">
		<![CDATA[
		SELECT MAX(order_num) + 1 FROM t_order
		]]>
	</select>
	
	<!-- 주문 완료 테이블에 데이터 등록하기 -->
	<insert id="addOrder" parameterType="com.edu.order.dto.OrderDTO">
		<![CDATA[
		INSERT INTO t_order (order_num, userID, order_date, address1, address2, postnum, order_name, order_phone, order_memo, paymethod, totalbill ,product_name ,product_code ,product_amount ,product_size)
		VALUES (#{order_num}, #{userID}, now(), #{address1}, #{address2}, #{postnum}, #{order_name}, #{order_phone}, #{order_memo}, #{paymethod}, #{totalbill}, #{product_name}, #{product_code}, #{product_amount}, #{product_size})
		]]>
	</insert>
	
	<!-- 주문 완료 상품 테이블에 데이터 등록하기 -->
	<insert id="addOrderProduct" parameterType="com.edu.order.dto.OrderDTO">
		<![CDATA[
		INSERT INTO t_orderProduct (orderProduct_num, order_num, userID, product_code, product_amount, product_size, review_yn ,order_date ,product_name)
		SELECT IFNULL(MAX(orderProduct_num), 0) + 1, #{order_num}, #{userID}, #{product_code}, #{product_amount}, #{product_size}, #{review_yn}, now(), #{product_name} FROM t_orderProduct
		]]>
	</insert>
	
	<!-- 날짜에 해당하는 주문건수 구하기 -->
	<select id="orderDateCount" parameterType="String" resultType="Integer">
		<![CDATA[
		SELECT COUNT(*) FROM t_order WHERE order_date LIKE CONCAT('%', #{date}, '%')
		]]>
	</select>
	
	<!-- 회원 아이디에 해당하는 t_orderProduct 리스트 구하기 -->
	<select id="getOrderDetailById" parameterType="String" resultType="com.edu.order.dto.OrderDTO">
		<![CDATA[
		SELECT * FROM t_orderProduct WHERE userID = #{userID}
		]]>
	</select>
	
	<!-- 주문 완료 번호와 상품 코드에 해당하는 t_orderProduct의 orderDTO 가져오기 -->
	<select id="getOrderDetailDTO" parameterType="com.edu.order.dto.OrderDTO" resultType="com.edu.order.dto.OrderDTO">
		<![CDATA[
		SELECT op.order_num, op.product_code, op.product_amount, op.product_size, p.product_name
		FROM t_orderProduct op, t_product p
		WHERE op.product_code = p.product_code and op.order_num = #{order_num} and op.product_code = #{product_code}
		]]>
	</select>
	
		<!-- 해당 주문 완료 번호의 t_orderProduct의 orderDTO 리스트 가져오기 -->
	<select id="getOrderDTODetail" resultType="com.edu.order.dto.OrderDTO">
		<![CDATA[
		SELECT op.order_num, op.userID, op.orderProduct_num, op.product_code, op.product_amount,  op.product_size, 
		p.product_name, p.product_price, op.review_yn, p.product_type
		FROM t_orderProduct op, t_product p 
		WHERE op.product_code = p.product_code and op.order_num = #{order_num}
		]]>
	</select>
	
	<!-- 해당 주문 완료 번호의 t_order의 orderDTO 가져오기 -->
	<select id="getOrderDTO" resultType="com.edu.order.dto.OrderDTO">
		<![CDATA[
		SELECT *
		FROM t_order
		WHERE order_num = #{order_num}
		ORDER BY order_date DESC
		]]>
	</select>
	
	
	
</mapper>