<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.member">

	<resultMap id = "memberResult" type = "com.edu.member.dto.MemberDTO">
		<result property = "userID" column = "userID"/>
		<result property = "pwd" column = "pwd"/>
		<result property = "address1" column = "address1"/>
		<result property = "address2" column = "address2"/>
		<result property = "postnum" column = "postnum"/>
		<result property = "name" column = "name"/>
		<result property = "age" column = "age"/>
		<result property = "phone" column = "phone"/>
		<result property = "hp" column = "hp"/>
		<result property = "gender" column = "gender"/>
		<result property = "email" column = "email"/>
		<result property = "joinDate" column = "joinDate"/>
		<result property = "grade" column = "grade"/>
	</resultMap>
	
	<!-- 아이디 중복 검사 : 입력한 아이디가 존재하는지 알아낸다. -->
	<select id = "idCheck" parameterType = "com.edu.member.dto.MemberDTO" resultType ="Integer">
		<![CDATA[
			select count(*)
			from t_member
			where userID = #{userID}
		]]>
	</select>
	
	<!-- 로그인 처리 -->
	<select id = "loginByID" parameterType="com.edu.member.dto.MemberDTO" resultType="com.edu.member.dto.MemberDTO">
		<![CDATA[
		SELECT * FROM t_member WHERE userID = #{userID};
		]]>
	</select>
	
	<!-- 회원 가입 처리 -->
	<insert id="addMember" parameterType="com.edu.member.dto.MemberDTO">
		<![CDATA[
			INSERT INTO t_member 
					(userID, 	pwd,  address1, address2, postnum, name, age, phone, gender, email, joinDate, grade)
			VALUES	(#{userID},	#{pwd}, #{address1}, #{address2}, #{postnum}, #{name}, #{age}, #{phone}, #{gender}, #{email}, sysdate(), 0);
		]]>
	</insert>
	<!-- 마이페이지 회원정보 수정하기 -->
	<update id="update" parameterType="com.edu.member.dto.MemberDTO">
		<![CDATA[
		UPDATE t_member 
		SET		pwd = #{pwd}, address1 = #{address1}, address2 = #{address2}, postnum = #{postnum}, name = #{name}, age = #{age}, phone = #{phone}, gender = #{gender}, email = #{email}
		WHERE	userID = #{userID}
		]]>
	</update>
	
	<!-- 아이디에 해당하는 회원 정보 삭제하기 -->
	<delete id="deleteMember" parameterType="String">
		<![CDATA[
			DELETE FROM	t_member
			WHERE	userID = #{userID}
		]]>
	</delete>
	
	<!-- qna 해당 아이디 게시글 전체 리스트 가져오기 -->
	<select id="boardUserList" resultType="com.edu.board.dto.BoardDTO" parameterType="String">
		<![CDATA[
			SELECT * FROM t_board WHERE userID= #{userID}
		]]>
	</select>
	
	<!-- 구매정보 가져오기 -->
	<select id="orderList" resultType="com.edu.order.dto.OrderDTO" parameterType="String">
		<![CDATA[
			SELECT * FROM t_orderproduct WHERE userID= #{userID}
		]]>
	</select>
	<!-- 마이페이지 구매정보 가져오기 -->
	
	
	<!-- 관리자페이지 상품 정보 가져오기 -->
	<!-- foreach 같은 문장에 CDATA를 쓰면 안먹힌다 주의!!! 이것때문에 엄청고생 -->
	<select id="productList" parameterType="Map" resultType="com.edu.product.dto.ProductDTO">
		select product_code, product_type, product_color, product_size, product_price, product_date, product_name, star_avg
		from (select product_code, product_type, product_color, product_size, product_price, product_date, product_name, star_avg,
		row_number() over( 
			<!--  <include refid="array"/>-->
		) as rNum from t_product where product_type in  
								<foreach collection="typeList" item="item" open="(" close=")" separator=",">
								 #{item}
								</foreach>
		
		<!-- <include refid="search"/> -->
		) bpd
		where rNUM BETWEEN (#{perPageNum} * #{page} - 8) and (#{perPageNum} * #{page}) 
	</select>
	
	<!-- Type + 전체 별 전체 데이터 갯수 -->
	<select id="totalCount" parameterType="Map" resultType="Integer">
		select count(*) from t_product where product_type in  
											<foreach collection="typeList" item="item" open="(" close=")" separator=",">
											 #{item}
											</foreach>
										   	and 1=1
	</select>
	
	<!-- 관리자페이지 qna게시판정보 가져오기 -->
	<select id="boardList" resultType="com.edu.board.dto.BoardDTO">
		<![CDATA[
		SELECT * 
		FROM t_board
		]]>
	</select>
	<!-- 관리자페이지 회원정보 가져오기 -->
	<select id="memberList" resultType="com.edu.member.dto.MemberDTO">
		<![CDATA[
		SELECT * 
		FROM t_member
		]]>
	</select>
	
	
	
</mapper>
